<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label6.Text" xml:space="preserve">
    <value>최대 프레임 레이트 (FPS)</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>클릭 무시</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>오버레이 표시</value>
  </data>
  <data name="buttonMiniParseOpenDevTools.Text" xml:space="preserve">
    <value>개발자 도구 열기</value>
  </data>
  <data name="buttonMiniParseReloadBrowser.Text" xml:space="preserve">
    <value>새로고침</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>위치 잠금</value>
  </data>

  <data name="lblNoFocus.Text" xml:space="preserve">
    <value>키 입력 무시</value>
  </data>

  <data name="buttonResetOverlayPosition.Text" xml:space="preserve">
    <value>오버레이 위치 초기화</value>
  </data>

  <data name="label4.Text" xml:space="preserve">
    <value>오버레이 배경을 흰색으로 변경</value>
  </data>

  <data name="checkLogConsoleMessages.Text" xml:space="preserve">
    <value>오버레이 콘솔 메시지를 로그에 표시</value>
  </data>

  <data name="label1.Text" xml:space="preserve">
    <value>URL</value>
  </data>

  <data name="label11.Text" xml:space="preserve">
    <value>오버레이를 OverlayPlugin으로 연결했을 때, 정상적으로 동작하지 않는다면 이 기능을 사용합니다.</value>
  </data>

  <data name="btnResetZoom.Text" xml:space="preserve">
    <value>초기화</value>
  </data>

  <data name="checkNoFocus.Text" xml:space="preserve">
    <value>이 오버레이에 포커스를 두지 않음 (키 입력 무시)</value>
  </data>

  <data name="checkActwsCompatbility.Text" xml:space="preserve">
    <value>오버레이를 ACTWebSocket으로 연결하기</value>
  </data>

  <data name="label12.Text" xml:space="preserve">
    <value>오버레이가 잘 보이지 않거나 크기 조정을 할 수 없는 경우에만 이 기능을 사용합니다.</value>
  </data>

  <data name="label5.Text" xml:space="preserve">
    <value>ACTWS 호환성</value>
  </data>
  <data name="label15.Text" xml:space="preserve">
    <value>확대/축소</value>
  </data>
  <data name="btnApplyHotkeyChanges.Text" xml:space="preserve">
    <value>수정 내용 적용</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>오버레이를 끄면 CPU 사용량을 줄이지만, 오버레이가 하는 모든 것을 중단시킵니다. (소리 등)
오버레이를 표시하지 않는 것은 단순히 보이지 않게 할 뿐입니다. 여전히 백그라운드에서 소리를 내보내고, 통계를 수집하는 등의 일을 합니다.</value>
  </data>
  <data name="tabACTWS.Text" xml:space="preserve">
    <value>ACT 웹소켓</value>
  </data>
  <data name="tabAdvanced.Text" xml:space="preserve">
    <value>고급</value>
  </data>
  <data name="tabGeneral.Text" xml:space="preserve">
    <value>일반</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>오버레이 켜기</value>
  </data>
  <data name="tabHotkeys.Text" xml:space="preserve">
    <value>단축키</value>
  </data>
  <data name="btnAddHotkey.Text" xml:space="preserve">
    <value>새 단축키 추가</value>
  </data>
  <data name="btnRemoveHotkey.Text" xml:space="preserve">
    <value>선택한 단축키 제거</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>오버레이 위치가 잠겨있으면, 위치 고정을 풀기 전까지는 오버레이를 움직일 수 없습니다.</value>
  </data>
  <data name="hotkeyColEnabled.HeaderText" xml:space="preserve">
    <value>활성화</value>
  </data>
  <data name="label13.Text" xml:space="preserve">
    <value>숨겨진 상태일 때 음소거하기</value>
  </data>
  <data name="hotkeyColHotkey.HeaderText" xml:space="preserve">
    <value>단축키</value>
  </data>
  <data name="hotkeyColAction.HeaderText" xml:space="preserve">
    <value>행동</value>
  </data>
</root>